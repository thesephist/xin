; monte-carlo method estimation of pi

(: (sq n)
   (* n n))

(: (inside? x y)
   (< (+ (sq x) (sq y)) 1))

(: (pi-from-ratio ratio)
   (* 4 ratio))

(: (run-monte-carlo times)
   ((: (run i inside-count)
       (if (= i times)
         (pi-from-ratio (/ inside-count
                           (frac i)))
         (run (inc i)
              (if (inside? (math::rand) (math::rand))
                (inc inside-count)
                inside-count)))) 0 0))

; run with increasing number of attempts
(: attempts (vec::map (seq 6) (: (f exp) (^ 10 (inc exp)))))
(vec::each attempts
           (: (f times)
              (log (str::join
                     (vec 'Estimate of Pi with '
                          (str times)
                          ' MC runs: \t'
                          (str (run-monte-carlo times)))
                     ''))))
