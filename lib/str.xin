; str standard library

(: (str-blank? s)
   (= s ''))

(: (str-reverse s)
   (if (str-blank? s)
     ''
     (+ (str-reverse (str-slice s 1 (str-size s)))
        (str-get s 0))))

(: (str-reduce s f acc)
   (do
     (: max (str-size v))
     (: (sub i acc)
        (if (< i max)
          (sub (+ i 1)
               (f (str-get v i) acc i))
          acc))
     (sub 0 acc)))

(: (str-join-vec v pad)
   (vec-reduce v
               (: (g s t)
                  (+ s t))
               pad))

; TODO: implement below

(: (str-index? s sub) 0)

(: (str-split s delim) 0)

(: (str-has? s sub) 0)

(: (str-prefix? s sub) 0)

(: (str-suffix? s sub) 0)

(: (str-upcase s) 0)

(: (str-downcase s) 0)

(: (str-upper? s) 0)

(: (str-lower? s) 0)
