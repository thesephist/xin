; str standard library

(: (blank? s)
   (= s ''))

(: (reverse s)
   (if (blank? s)
     ''
     (+ (reverse (str::slice s 1 (str::size s)))
        (str::get s 0))))

(: (reduce s f acc)
   (do
     (: max (str::size v))
     (: (sub i acc)
        (if (< i max)
          (sub (+ i 1)
               (f (str::get v i) acc i))
          acc))
     (sub 0 acc)))

(: (join v pad)
   (if (vec::empty? v)
     ''
     (vec::reduce (vec::tail v)
                  (: (f s acc)
                     (+ acc (+ pad s)))
                  (vec::head v))))

; TODO: implement below

(: (index? s sub) 0)

(: (split s delim) 0)

(: (has? s sub) 0)

(: (prefix? s sub) 0)

(: (suffix? s sub) 0)

(: (upper? s) 0)

(: (lower? s) 0)

(: (upcase s) 0)

(: (downcase s) 0)
